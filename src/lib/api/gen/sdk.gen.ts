// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from "./client";
import type {
  GetAccessTokenWithPasswordApiV1AuthLoginPostData,
  GetAccessTokenWithPasswordApiV1AuthLoginPostResponses,
  GetAccessTokenWithPasswordApiV1AuthLoginPostErrors,
  GetAccessTokenWithRefreshTokenApiV1AuthRefreshPostData,
  GetAccessTokenWithRefreshTokenApiV1AuthRefreshPostResponses,
  GetAccessTokenWithRefreshTokenApiV1AuthRefreshPostErrors,
  GetMeApiV1MeGetData,
  GetMeApiV1MeGetResponses,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Get Access Token With Password
 */
export const getAccessTokenWithPasswordApiV1AuthLoginPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAccessTokenWithPasswordApiV1AuthLoginPostData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    GetAccessTokenWithPasswordApiV1AuthLoginPostResponses,
    GetAccessTokenWithPasswordApiV1AuthLoginPostErrors,
    ThrowOnError
  >({
    responseType: "json",
    url: "/api/v1/auth/login",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Get Access Token With Refresh Token
 */
export const getAccessTokenWithRefreshTokenApiV1AuthRefreshPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAccessTokenWithRefreshTokenApiV1AuthRefreshPostData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    GetAccessTokenWithRefreshTokenApiV1AuthRefreshPostResponses,
    GetAccessTokenWithRefreshTokenApiV1AuthRefreshPostErrors,
    ThrowOnError
  >({
    responseType: "json",
    url: "/api/v1/auth/refresh",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Get Me
 */
export const getMeApiV1MeGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetMeApiV1MeGetData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetMeApiV1MeGetResponses,
    unknown,
    ThrowOnError
  >({
    responseType: "json",
    url: "/api/v1/me/",
    ...options,
  });
};
